import{_ as e,o as t,c as s,e as a}from"./app-B0uMI3UX.js";const l={},r=a('<h2 id="类型推断" tabindex="-1"><a class="header-anchor" href="#类型推断"><span>类型推断</span></a></h2><h2 id="定义类型" tabindex="-1"><a class="header-anchor" href="#定义类型"><span>定义类型</span></a></h2><h2 id="组合类型" tabindex="-1"><a class="header-anchor" href="#组合类型"><span>组合类型</span></a></h2><h3 id="联合" tabindex="-1"><a class="header-anchor" href="#联合"><span>联合</span></a></h3><h3 id="泛型" tabindex="-1"><a class="header-anchor" href="#泛型"><span>泛型</span></a></h3><h2 id="结构化的类型系统-structural-type-system" tabindex="-1"><a class="header-anchor" href="#结构化的类型系统-structural-type-system"><span>结构化的类型系统(structural type system)</span></a></h2><p>TypeScript 的一个核心原则是类型检查基于对象的属性和行为（type checking focuses on the shape that values have）。</p><p>这有时被叫做“鸭子类型”或“结构类型”（structural typing）。</p><p>在结构化的类型系统当中，如果两个对象具有相同的结构，则认为它们是相同类型的。</p>',9),c=[r];function n(i,h){return t(),s("div",null,c)}const d=e(l,[["render",n],["__file","type-system.html.vue"]]),o=JSON.parse('{"path":"/blogs/docs/typescript/type-system.html","title":"TypeScript 的类型系统","lang":"en-US","frontmatter":{"title":"TypeScript 的类型系统","date":"2024/06/21"},"headers":[{"level":2,"title":"类型推断","slug":"类型推断","link":"#类型推断","children":[]},{"level":2,"title":"定义类型","slug":"定义类型","link":"#定义类型","children":[]},{"level":2,"title":"组合类型","slug":"组合类型","link":"#组合类型","children":[{"level":3,"title":"联合","slug":"联合","link":"#联合","children":[]},{"level":3,"title":"泛型","slug":"泛型","link":"#泛型","children":[]}]},{"level":2,"title":"结构化的类型系统(structural type system)","slug":"结构化的类型系统-structural-type-system","link":"#结构化的类型系统-structural-type-system","children":[]}],"git":{"createdTime":1718962977000,"updatedTime":1718962977000,"contributors":[{"name":"chiqing","email":"562269961@qq.com","commits":1}]},"filePathRelative":"blogs/docs/typescript/type-system.md"}');export{d as comp,o as data};
